services:
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    depends_on:
      - prometheus
    networks:
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik"
      - "traefik.http.routers.grafana.rule=Host(`grafana.marcmarina.com`)"
      - "traefik.http.routers.grafana.entrypoints=websecure"
      - "traefik.http.routers.grafana.tls.certresolver=letsencrypt"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus:/etc/prometheus:ro
      - prometheus_data:/prometheus

    entrypoint: ["/bin/sh"]
    # command:
    #   # - "--config.file=/etc/prometheus/prometheus.yml"
    #   # - "--storage.tsdb.path=/prometheus"
    #   # # - "--web.console.libraries=/etc/prometheus/console_libraries"
    #   # # - "--web.console.templates=/etc/prometheus/consoles"
    #   # - "--storage.tsdb.retention.time=200h"
    #   - /bin/sh
    #   - -c
    #   - "ls -la /etc/prometheus && sleep 3600"
    #   # - "--web.enable-lifecycle"
    tty: true
    stdin_open: true
    restart: unless-stopped
    networks:
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik"
      - "traefik.http.routers.prometheus.rule=Host(`prometheus.marcmarina.com`)"
      - "traefik.http.routers.prometheus.entrypoints=websecure"
      - "traefik.http.routers.prometheus.tls.certresolver=letsencrypt"
      - "traefik.http.services.prometheus.loadbalancer.server.port=9090"

volumes:
  prometheus_data:
  grafana_data:

networks:
  traefik:
    external: true
